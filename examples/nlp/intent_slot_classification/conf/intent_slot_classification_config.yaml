# Intent and Slot classification with pretrained BERT models

trainer:
  gpus: 1 # the number of gpus, 0 for CPU
  num_nodes: 1
  max_epochs: 50
  max_steps: null # precedence over max_epochs
  accumulate_grad_batches: 1 # accumulates grads every k batches
  amp_level: O0 # O1/O2 for mixed precision
  precision: 16 # Should be set to 16 for O1 and O2, default is 16 as PT ignores it when am_level is O0
  distributed_backend: ddp
  row_log_interval: 1  # Interval of logging.
  val_check_interval: 1.0  # Set to 0.25 to check 4 times per epoch, or an int for number of iterations
  resume_from_checkpoint: null # The path to a checkpoint file to continue the training, restores the whole state including the epoch, step, LR schedulers, apex, etc.

  checkpoint_callback: False  # Provided by exp_manager
  logger: False  # Provided by exp_manager

model:
  data_dir: ??? # /path/to/data
  class_balancing: null # or weighted_loss
  intent_loss_weight: 0.6 # relation of intent to slot loss in total loss (between 0 to 1)
  pad_label: 128
  ignore_extra_tokens: false
  ignore_start_end: false

  train_ds:
    prefix: train
    batch_size: 32
    shuffle: true
    num_samples: -1
    num_workers: 2
    drop_last: false
    pin_memory: false

  validation_ds:
    prefix: test
    batch_size: 32
    shuffle: false
    num_samples: -1
    num_workers: 2
    drop_last: false
    pin_memory: false

  language_model:
    pretrained_model_name: bert-base-uncased
    max_seq_length: 50
    bert_checkpoint_file: null # the path of a checkpoint file of a BERT-like model if a customized checkpoint is supposed to be used
    bert_config: null
    tokenizer: nemobert # 'nemobert' or 'sentencepiece'
    vocab_file: null
    tokenizer_model: null # only used if tokenizer is sentencepiece
    do_lower_case: true # true for uncased models, false for cased models, will be set automatically if pre-trained tokenizer model is used
  
  head:
    num_output_layers: 2
    fc_dropout: 0.1

  optim:
    name: adam
    lr: 2e-5
    args:
      name: auto
      params:
        weight_decay: 0.01

    sched:
      name: WarmupAnnealing
      iters_per_batch: null # computed at runtime
      max_steps: null # computed at runtime or explicitly set here

      # pytorch lightning args
      monitor: val_loss
      reduce_on_plateau: false

      # scheduler config override
      args:
        name: auto
        params:
          warmup_steps: null
          warmup_ratio: 0.1
          last_epoch: -1

exp_manager:
  root_dir: null  # root_dir for your experiment, if None, defaults to "./NeMo_experiments"
  name: "IntentSlot"  # The name of your model
  create_tensorboard_logger: True  # Whether you want exp_manger to create a tb logger
  create_checkpoint_callback: True  # Whether you want exp_manager to create a modelcheckpoint callback

hydra:
  run:
    dir: .
  job_logging:
    root:
      handlers: null