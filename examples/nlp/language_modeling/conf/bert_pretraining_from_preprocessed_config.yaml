# BERT Pretraining from Preprocessed (tokenized) data
trainer:
  gpus: 1 # the number of gpus, 0 for CPU, or list with gpu indices
  num_nodes: 1
  max_steps: 100 # precedence over max_epochs
  num_sanity_val_steps: 0 # needed for bert pretraining from preproc
  replace_sampler_ddp: false # needed for bert pretraining from preproc
  accumulate_grad_batches: 1 # accumulates grads every k batches
  precision: 16 # 16 to use AMP 
  amp_level: O1 # O1 or O2 if using AMP 
  distributed_backend: ddp
  gradient_clip_val: 0.0
  row_log_interval: 1
  val_check_interval: 1.0 # check once per epoch .25 for 4 times per epoch
  checkpoint_callback: false # provided by exp_manager
  logger: false # provided by exp_manager

model:
  language_model:
    pretrained_model_name: bert-base-uncased # huggingface model name
    bert_checkpoint: null
    bert_config:
      attention_probs_dropout_prob: 0.1
      hidden_act: gelu
      hidden_dropout_prob: 0.1
      hidden_size: 768
      initializer_range: 0.02
      intermediate_size: 3072
      max_position_embeddings: 512
      num_attention_heads: 12
      num_hidden_layers: 12
      type_vocab_size: 2
      vocab_size: 30522
    bert_config_file: null # json file, precedence over bert_config
  
  tokenizer: null # 
  
  train_ds:
    data_file: null # path to hdf5 file (or directory)
    max_predictions_per_seq: 20
    batch_size: 16
    shuffle: true
    num_samples: -1
    num_workers: 2
    drop_last: false
    pin_memory: false

  optim:
    name: adamw
    lr: 3e-5
    weight_decay: 0.0

    sched:
      name: CosineAnnealing
      warmup_steps: null
      warmup_ratio: 0.1
      min_lr: 0.0
      last_epoch: -1

  
exp_manager:
  root_dir: NeMo_experiments # where to store logs and checkpoints
  name: PretrainingBERTFromPreprocessed # name of experiment
  create_tensorboard_logger: True
  create_checkpoint_callback: True

hydra:
  run:
    dir: .
  job_logging:
    root:
      handlers: null