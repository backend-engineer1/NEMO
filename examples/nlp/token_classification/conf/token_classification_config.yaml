# Copyright (c) 2020, NVIDIA CORPORATION.  All rights reserved.
# Copyright 2018 The Google AI Language Team Authors and
# The HuggingFace Inc. team.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Named Entity Recognition with pretrained BERT models

trainer:
  gpus: 1 # the number of gpus, 0 for CPU
  num_nodes: 1
  max_epochs: 5
  max_steps: null # precedence over max_epochs
  accumulate_grad_batches: 1 # accumulates grads every k batches
  amp_level: O0 # O1/O2 for mixed precision
  distributed_backend: ddp
  checkpoint_callback: False  # Provided by exp_manager
  logger: False  # Provided by exp_manager
  val_check_interval: 1.0  # Set to 0.25 to check 4 times per epoch, or an int for number of iterations
  resume_from_checkpoint: null # The path to a checkpoint file to continue the training, restores the whole state including the epoch, step, LR schedulers, apex, etc.

model:
  dataset:
    data_dir: ??? # /path/to/data
    class_balancing: null # choose from [null, weighted_loss]. Weighted_loss enables the weighted class balancing of the loss, may be used for handling unbalanced classes
    max_seq_length: 128
    pad_label: 'O'
    ignore_extra_tokens: false
    ignore_start_end: false
    use_cache: true

  train_ds:
    prefix: train
    shuffle: true
    num_samples: -1
    batch_size: 64
    num_workers:  2
    pin_memory: false
    drop_last: false

  validation_ds:
    prefix: dev
    shuffle: false
    num_samples: -1
    batch_size: 64
    num_workers:  2
    pin_memory: false
    drop_last: false

  language_model:
    pretrained_model_name: bert-base-uncased
    bert_checkpoint: null
    bert_config: null
    tokenizer: nemobert # 'nemobert' or 'sentencepiece'
    vocab_file: null
    tokenizer_model: null # only used if tokenizer is sentencepiece
    do_lower_case: false # true for uncased models, false for cased models, will be set automatically if pre-trained tokenizer model is used

  head:
    num_fc_layers: 2
    fc_dropout: 0.5
    activation: 'relu'
    log_softmax: True
    use_transformer_init: True

  optim:
    name: adam
    lr: 5e-5
    weight_decay: 0.00

    sched:
      name: WarmupAnnealing
      # Scheduler params
      warmup_steps: null
      warmup_ratio: 0.1
      last_epoch: -1

exp_manager:
  root_dir: null  # root_dir for your experiment, if None, defaults to "./NeMo_experiments"
  name: NamedEntityRecognition  # The name of your model
  create_tensorboard_logger: true  # Whether you want exp_manger to create a tb logger
  create_checkpoint_callback: true  # Whether you want exp_manager to create a modelcheckpoint callback

hydra:
  run:
    dir: .
  job_logging:
    root:
      handlers: null
