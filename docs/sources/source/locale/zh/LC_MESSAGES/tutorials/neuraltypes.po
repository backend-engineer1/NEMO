# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018-2019, NVIDIA
# This file is distributed under the same license as the nemo package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: nemo 0.9.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-12-03 17:10+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../source/tutorials/neuraltypes.rst:2
msgid "Neural Types"
msgstr ""

#: ../../source/tutorials/neuraltypes.rst:4
msgid ""
"Neural Types are used to check input tensors to make sure that two neural"
" modules are compatible, and catch semantic and dimensionality errors."
msgstr ""

#: ../../source/tutorials/neuraltypes.rst:7
msgid ""
"Neural Types are implemented by "
":class:`NeuralType<nemo.core.neural_types.NeuralType>` class which is a "
"mapping from Tensor's axis to "
":class:`AxisType<nemo.core.neural_types.AxisType>`."
msgstr ""

#: ../../source/tutorials/neuraltypes.rst:9
msgid ""
":class:`AxisType<nemo.core.neural_types.AxisType>` contains following "
"information per axis:"
msgstr ""

#: ../../source/tutorials/neuraltypes.rst:11
msgid ""
"Semantic Tag, which must inherit from "
":class:`BaseTag<nemo.core.neural_types.BaseTag>`, for example: "
":class:`BatchTag<nemo.core.neural_types.BatchTag>`, "
":class:`ChannelTag<nemo.core.neural_types.ChannelTag>`, "
":class:`TimeTag<nemo.core.neural_types.TimeTag>`, etc. These tags can be "
"related via `is-a` inheritance."
msgstr ""

#: ../../source/tutorials/neuraltypes.rst:12
msgid "Dimension: unsigned integer"
msgstr ""

#: ../../source/tutorials/neuraltypes.rst:13
msgid "Descriptor: string"
msgstr ""

#: ../../source/tutorials/neuraltypes.rst:16
msgid ""
"To instantiate a NeuralType you should pass it a dictionary (axis2type) "
"which will map axis to it's AxisType. For example, a ResNet18 input and "
"output ports can be described as:"
msgstr ""

#: ../../source/tutorials/neuraltypes.rst:31
msgid "**Neural type comparison**"
msgstr ""

#: ../../source/tutorials/neuraltypes.rst:33
msgid ""
"Two :class:`NeuralType<nemo.core.neural_types.NeuralType>` objects can be"
" compared using ``.compare`` method. The result is:"
msgstr ""

#: ../../source/tutorials/neuraltypes.rst:49
msgid "**Special cases**"
msgstr ""

#: ../../source/tutorials/neuraltypes.rst:51
msgid "*Non-tensor* objects should be denoted as ``NeuralType(None)``"
msgstr ""

#: ../../source/tutorials/neuraltypes.rst:52
msgid ""
"*Optional*: input is as optional, if input is provided the type "
"compatibility will be checked"
msgstr ""

#: ../../source/tutorials/neuraltypes.rst:53
msgid ""
"*Root* type is denoted by ``NeuralType({})``: A port of "
"``NeuralType({})`` type must accept NmTensors of any NeuralType:"
msgstr ""

#: ../../source/tutorials/neuraltypes.rst:60
msgid "See \"nemo/tests/test_neural_types.py\" for more examples."
msgstr ""

#: ../../source/tutorials/neuraltypes.rst:63
msgid "**Neural Types help us to debug models**"
msgstr ""

#: ../../source/tutorials/neuraltypes.rst:65
msgid ""
"There is a large class of errors, which will not produce runtime or "
"compile exception. For example:"
msgstr ""

#: ../../source/tutorials/neuraltypes.rst:67
msgid "\"Rank matches but semantics doesn't\"."
msgstr ""

#: ../../source/tutorials/neuraltypes.rst:69
msgid ""
"For example, Module A produces data in the format [Batch, Time, Dim] "
"whereas Module B  expects format [Time, Batch, Dim]. A simple axes "
"transpose will solve this error."
msgstr ""

#: ../../source/tutorials/neuraltypes.rst:71
msgid "\"Concatenating wrong dimensions\"."
msgstr ""

#: ../../source/tutorials/neuraltypes.rst:73
msgid ""
"For example, module should concatenate (add) two input tensors X and Y "
"along dimension 0. But tensor X is in format [B, T, D] while tensor Y=[T,"
" B, D] and concat . ."
msgstr ""

#: ../../source/tutorials/neuraltypes.rst:75
msgid "\"Dimensionality mismatch\""
msgstr ""

#: ../../source/tutorials/neuraltypes.rst:77
msgid ""
"A module expects image of size 224x224 but gets 256x256. The type "
"comparison will result in ``NeuralTypeComparisonResult.DIM_INCOMPATIBLE``"
" ."
msgstr ""

#: ../../source/tutorials/neuraltypes.rst:80
msgid ""
"This type mechanism is represented by Python inheritance. That is, "
":class:`NmTensor<nemo.core.neural_types.NmTensor>` class inherits from "
":class:`NeuralType<nemo.core.neural_types.NeuralType>` class."
msgstr ""

