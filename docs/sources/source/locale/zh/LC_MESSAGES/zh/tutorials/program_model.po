# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018-2019, NVIDIA
# This file is distributed under the same license as the nemo package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: nemo 0.9.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-12-03 17:10+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"

#: ../../source/zh/tutorials/program_model.rst:2
msgid "编程模型"
msgstr ""

#: ../../source/zh/tutorials/program_model.rst:4
msgid "一个典型的而是用NeMo APIs的应用包含三个逻辑步骤："
msgstr ""

#: ../../source/zh/tutorials/program_model.rst:6
msgid ""
"创建 "
":class:`NeuralModuleFactory<nemo.core.neural_factory.NeuralModuleFactory>`"
" 类和必要的 :class:`NeuralModule<nemo.core.neural_modules.NeuralModule>` 类"
msgstr ""

#: ../../source/zh/tutorials/program_model.rst:7
msgid ""
"定义一个有向无环图(DAG)类 "
":class:`NeuralModule<nemo.core.neural_modules.NeuralModule>`"
msgstr ""

#: ../../source/zh/tutorials/program_model.rst:8
msgid "调用像是 :class:`train<nemo.core.neural_factory.Actions.train>` 类的操作"
msgstr ""

#: ../../source/zh/tutorials/program_model.rst:10
msgid "NeMo遵循 *lazy execution* 模型 - 实际的计算只会在训练和推理的操作被调用后才会执行。"
msgstr ""

#: ../../source/zh/tutorials/program_model.rst:12
msgid ""
":class:`NeuralModule<nemo.core.neural_modules.NeuralModule>` "
"是层和神经网络的一个抽象，比如：编码器，解码器，语言模型，声学模型等。每个 "
":class:`NeuralModule<nemo.core.neural_modules.NeuralModule>` "
"从一系列的输入计算一系列的输出。 每个 :class:`NmTensor<nemo.core.neural_types.NmTensor>` 有 "
":class:`NeuralType<nemo.core.neural_types.NeuralType>` . "
":class:`NeuralType<nemo.core.neural_types.NeuralType>` 描述了张量的语义，轴的维度。这些类型"
" 用来确定模块之间如何连接起来。"
msgstr ""

#: ../../source/zh/tutorials/program_model.rst:17
msgid "你也可以给操作传递 *回调函数* ，这样就可以做评估验证，打印日志和做一些训练时候的性能监测。"
msgstr ""

